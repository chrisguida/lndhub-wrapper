id: lndhub
title: LndHub
version: 1.4.1
release-notes: |
  Initial release of LndHub for EmbassyOS
license: mit
wrapper-repo: "https://github.com/Start9Labs/lndhub-wrapper"
upstream-repo: "https://github.com/BlueWallet/lndhub"
support-site: "https://t.me/bluewallet"
marketing-site: "https://bluewallet.io/lndhub/"
build: ["make"]
description:
  short: Wrapper for Lightning Network Daemon. It provides separate accounts for end-users.
  long: |
    A free and open source, multiple account plugin for Lightning built on top of the Lightning Network Deamon.
    It allows that a group of users run different accounts with only one node in a trust-minimized setup.
    Ideal for hosted shared services or groups, families and friends that want to share their own node.
    Required for connecting BlueWallet to a self-hosted LND node.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: "/root"
    lnd: /mnt/lnd
  io-format: yaml
health-checks:
  api:
    name: LndHub API
    success-message: Operational
    type: docker
    image: main
    entrypoint: check-api.sh
    args: []
    io-format: json
    inject: true
config:
  get:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - get
      - /root
      - /mnt/assets/config_spec.yaml
    mounts:
      compat: /mnt/assets
      main: /root
    io-format: yaml
  set:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - set
      - lndhub
      - /root
      - /mnt/assets/config_rules.yaml
    mounts:
      compat: /mnt/assets
      main: /root
    io-format: yaml
properties:
  type: docker
  image: compat
  system: true
  entrypoint: compat
  args:
    - properties
    - "/root"
  mounts:
    main: "/root"
    compat: /mnt/assets
  io-format: yaml
dependencies:
  lnd:
    version: ">=0.13.0.5 <0.15.0"
    requirement:
      type: required
    description: The LND node you wish to use with LndHub.
    config: ~
      # check:
      #   type: docker
      #   image: compat
      #   system: true
      #   entrypoint: compat
      #   args:
      #     - dependency
      #     - check
      #     - lndhub
      #     - lnd
      #     - /root
      #     - /mnt/assets/lnd_config_rules.yaml
      #   mounts:
      #     main: "/root"
      #     compat: /mnt/assets
      #   io-format: yaml
      # auto-configure:
      #   type: docker
      #   image: compat
      #   system: true
      #   entrypoint: compat
      #   args:
      #     - dependency
      #     - "auto-configure"
      #     - lndhub
      #     - lnd
      #     - "/root"
      #     - "/mnt/assets/lnd_config_rules.yaml"
      #   mounts:
      #     main: /root
      #     compat: /mnt/assets
      #   io-format: yaml
volumes:
  main:
    type: data
  compat:
    type: assets
  lnd:
    type: pointer
    package-id: lnd
    volume-id: main
    path: /public
    readonly: false
alerts: {}
interfaces:
  api:
    name: REST API
    description: Serves the LndHub API
    tor-config:
      port-mapping:
        3000: "3000"
    ui: false
    protocols:
      - tcp
      - http
      - lndhub
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root
    mounts:
      BACKUP: /mnt/backup
      main: /root
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root
    mounts:
      BACKUP: /mnt/backup
      main: /root
    io-format: yaml
migrations:
  from:
    "<1.4.1":
      type: docker
      image: main
      system: false
      entrypoint: "/bin/echo"
      args: ['{"configured": true}']
      io-format: json
      inject: false
    ">=1.4.1":
      type: docker
      image: main
      system: false
      entrypoint: "/bin/echo"
      args: ['{"configured": true}']
      io-format: json
      inject: false
  to:
    "<1.4.1":
      type: docker
      image: main
      system: false
      entrypoint: "/bin/echo"
      args: ['{"configured": true}']
      io-format: json
      inject: false
    ">=1.4.1":
      type: docker
      image: main
      system: false
      entrypoint: "/bin/echo"
      args: ['{"configured": true}']
      io-format: json
      inject: false
